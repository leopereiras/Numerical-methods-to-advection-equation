%% Variaveis e fun√ß√µes
cinj = 2;
cini = 15;

% ca = 3;
% cb = 4;
Lx = 9;
alfa = 0.000008;
tempo = 1000;
divEspaco = 250;
divTempo = 80;
u = 0.001;
deltaX = Lx / divEspaco; % N√∫mero de divis√µes espaciais.
deltaT = tempo / divTempo;  % N√∫mero de divis√µes temporais.
aux = 0; % Definindo aux = 0 globalmente.
vetorEspaco = zeros(1,divEspaco); % Inicializando vetor da malha espacial.
oldVet = zeros(1,divEspaco); % Inicializando vetor da concentra√ß√£o antiga.
newVet = zeros(1,divEspaco); % Inicializando vetor da concentra√ß√£o nova.
vetorCini = zeros(1, tempo);
vetorTempo = zeros(1,tempo);
tamVetorTempo = length(vetorTempo);
DeltaTMAX = (1)/(((2*alfa)/(deltaX^2)) + (u/deltaX));
for i=1:tempo
    vetorTempo(i) = i;

end
for j=1:tamVetorTempo/2
    vetorCini(j) = cini;
end
for k=(tamVetorTempo/2)+1:tamVetorTempo
    vetorCini(k) = 10;
end




%Gr·fico CondiÁ„o Inicial

% plot(vetorTempo,vetorCini,'r');
% title("Troca da condiÁ„o inicial");
% xlabel("Lx");
% ylabel("CondiÁ„o inicial"); 




for i = 2:divEspaco
    vetorEspaco(i) = vetorEspaco(i-1) + deltaX; % Preenchendo a malha come√ßando do i=2 por causa da condi√ß√£o de contorno
end

% Preencher o vetor com as condi√ß√µes iniciais, no while ele vai substituir
% os valores que n√£o sejam o indice 1.
% for i = 1:divEspaco
%     oldVet(i)=cini;
%     newVet(i)=cini;
% end

%oldVet(1) = cini; % Condi√ß√£o inicial no indice 1.
%newVet(1) = cini; % Condi√ß√£o inicial no indice 1.
